{"version":3,"sources":["../src/module.js"],"names":["_","$","PanelCtrl","RemoteHtmlPanelCtrl","$scope","$injector","templateSrv","$sce","panelDefaults","method","url","content","defaults","panel","tmp_url","events","on","onInitEditMode","bind","onRefresh","onRender","addEditorTab","editorTabIndex","render","replace","scopedVars","renderingCompleted","console","log","p","ajax","data","updateContent","html","trustAsHtml","e","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAOA,a;;AACAC,a;;AACEC,qB,kBAAAA,S;;;;;;;;;;;;;;;;;;;;;gEAEIC,mB;;;;;AACT;AACA,6CAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,WAA/B,EAA4CC,IAA5C,EAAkD;AAAA;;AAAA,0JACxCH,MADwC,EAChCC,SADgC;;AAG9C,0BAAKG,aAAL,GAAqB;AACjBC,gCAAQ,KADS,EACF;AACfC,6BAAM;AAFW,qBAArB;AAIA,0BAAKC,OAAL,GAAe,EAAf;;AAEAX,sBAAEY,QAAF,CAAW,MAAKC,KAAhB,EAAuB,MAAKL,aAA5B;AACA,0BAAKF,WAAL,GAAmBA,WAAnB;AACA,0BAAKC,IAAL,GAAYA,IAAZ;AACA,0BAAKO,OAAL,GAAe,EAAf;;AAEA,0BAAKC,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,MAAKC,cAAL,CAAoBC,IAApB,OAAjC;AACA,0BAAKH,MAAL,CAAYC,EAAZ,CAAe,SAAf,EAA0B,MAAKG,SAAL,CAAeD,IAAf,OAA1B;AACA,0BAAKH,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,MAAKI,QAAL,CAAcF,IAAd,OAAzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AAvB8C;AAwBjD;;;;qDAEgB;AACb,6BAAKG,YAAL,CAAkB,SAAlB,EAA6B,gDAA7B;AACA,6BAAKC,cAAL,GAAsB,CAAtB;AACA,4BAAI,KAAKT,KAAL,CAAWJ,MAAX,KAAsB,WAA1B,EAAuC;AACnC,iCAAKI,KAAL,CAAWJ,MAAX,GAAoB,KAApB;AACH;AACJ;;;gDAEW;AACR,6BAAKc,MAAL;AACH;;;+CAEU;AACP,4BAAI,KAAKV,KAAL,CAAWH,GAAX,IAAkB,EAAlB,IAAwB,KAAKG,KAAL,CAAWJ,MAAX,IAAqB,EAAjD,EAAqD;AACjD,gCAAIA,SAAS,KAAKI,KAAL,CAAWJ,MAAxB;AACA,gCAAIC,MAAM,KAAKJ,WAAL,CAAiBkB,OAAjB,CAAyB,KAAKX,KAAL,CAAWH,GAApC,EAAyC,KAAKG,KAAL,CAAWY,UAApD,CAAV;AACA,gCAAIf,OAAO,KAAKI,OAAhB,EAAyB;AACrB,qCAAKY,kBAAL;AACA;AACH;AACDC,oCAAQC,GAAR,CAAYlB,GAAZ;AACA,gCAAImB,IAAI,IAAR;AACA,gCAAIpB,UAAU,KAAd,EAAqB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACER,kCAAE6B,IAAF,CAAO;AACH,2CAAOpB,GADJ;AAEH,4CAAQ,KAFL;AAGH,6CAAS,KAHN;AAIH,+CAAW,iBAAUqB,IAAV,EAAgB;AACvBF,0CAAEf,OAAF,GAAYJ,GAAZ;AACAiB,gDAAQC,GAAR,CAAYG,IAAZ;AACAF,0CAAEG,aAAF,CAAgBD,IAAhB;AACH;AARE,iCAAP;AAUH,6BAlBD,MAkBO,IAAItB,UAAU,MAAd,EAAsB;AACzBkB,wCAAQC,GAAR,CAAY,MAAZ;AACH;AACJ;AACD,6BAAKF,kBAAL;AACH;;;+CAEUf,O,EAAS;AAChBA,kCAAUA,QACPa,OADO,CACC,IADD,EACO,OADP,EAEPA,OAFO,CAEC,IAFD,EAEO,MAFP,EAGPA,OAHO,CAGC,IAHD,EAGO,MAHP,EAIPA,OAJO,CAIC,KAJD,EAIQ,OAJR,CAAV;AAKA,6BAAKQ,aAAL,CAAmBrB,OAAnB;AACH;;;kDAEasB,I,EAAM;AAChB,4BAAI;AACA,iCAAKtB,OAAL,GAAe,KAAKJ,IAAL,CAAU2B,WAAV,CAAsBD,IAAtB,CAAf;AACH,yBAFD,CAEE,OAAOE,CAAP,EAAU;AACRR,oCAAQC,GAAR,CAAY,oBAAZ,EAAkCO,CAAlC;AACA,iCAAKxB,OAAL,GAAe,KAAKJ,IAAL,CAAU2B,WAAV,CAAsBD,IAAtB,CAAf;AACH;AACJ;;;;cA3FoC/B,S;;;;AA8FzCC,gCAAoBiC,WAApB,GAAkC,aAAlC;;iCACSjC,mB","file":"module.js","sourcesContent":["import _ from 'lodash';\nimport $ from 'jquery';\nimport { PanelCtrl } from 'app/plugins/sdk';\n\nexport class RemoteHtmlPanelCtrl extends PanelCtrl {\n    /** @ngInject **/\n    constructor($scope, $injector, templateSrv, $sce) {\n        super($scope, $injector);\n\n        this.panelDefaults = {\n            method: 'GET', // 'GET', 'POST'\n            url:  \"\",\n        };\n        this.content = \"\";\n\n        _.defaults(this.panel, this.panelDefaults);\n        this.templateSrv = templateSrv;\n        this.$sce = $sce;\n        this.tmp_url = \"\";\n\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n        this.events.on('refresh', this.onRefresh.bind(this));\n        this.events.on('render', this.onRender.bind(this));\n\n        // $scope.$watch(\n        //   'ctrl.panel.url',\n        //   _.throttle(() => {\n        //     this.render();\n        //   }, 1000)\n        // );\n    }\n\n    onInitEditMode() {\n        this.addEditorTab('Options', 'public/plugins/grafana-remote-html/editor.html');\n        this.editorTabIndex = 1;\n        if (this.panel.method === 'undefined') {\n            this.panel.method = 'GET';\n        }\n    }\n\n    onRefresh() {\n        this.render();\n    }\n\n    onRender() {\n        if (this.panel.url != \"\" && this.panel.method != \"\") {\n            var method = this.panel.method;\n            var url = this.templateSrv.replace(this.panel.url, this.panel.scopedVars);\n            if (url == this.tmp_url) {\n                this.renderingCompleted();\n                return;\n            }\n            console.log(url);\n            var p = this;\n            if (method == \"GET\") {\n              // $.get(url, function (data, status) {\n              //         console.log(data);\n              //         p.tmp_url = url;\n              //         p.updateContent(data);\n              //         p.renderingCompleted();\n              //     }\n              // );\n                $.ajax({\n                    \"url\": url,\n                    \"type\": \"GET\",\n                    \"async\": false,\n                    \"success\": function (data) {\n                        p.tmp_url = url;\n                        console.log(data);\n                        p.updateContent(data);\n                    }\n                });\n            } else if (method == \"POST\") {\n                console.log(\"POST\");\n            }\n        }\n        this.renderingCompleted();\n    }\n\n    renderText(content) {\n        content = content\n          .replace(/&/g, '&amp;')\n          .replace(/>/g, '&gt;')\n          .replace(/</g, '&lt;')\n          .replace(/\\n/g, '<br/>');\n        this.updateContent(content);\n    }\n\n    updateContent(html) {\n        try {\n            this.content = this.$sce.trustAsHtml(html);\n        } catch (e) {\n            console.log('Text panel error: ', e);\n            this.content = this.$sce.trustAsHtml(html);\n        }\n    }\n}\n\nRemoteHtmlPanelCtrl.templateUrl = 'module.html';\nexport { RemoteHtmlPanelCtrl as PanelCtrl };\n"]}